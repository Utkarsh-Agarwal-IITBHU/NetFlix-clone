{"version":3,"sources":["axios.js","Row.js","request.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movie","setmovie","trUrl","settrUrl","useEffect","a","get","fiurl","data","results","movietre","className","map","movier","onClick","movieTrailer","name","original_name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","trailerinitiate","src","poster_path","backdrop_path","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","request","fetchTrending","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchMystery","fetchSciFi","fetchWestern","fetchAnimation","fetchTV","Banner","requests","num","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","overview","Nav","mouse","setmouse","mousepos","e","window","scrollY","addEventListener","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad63b3d0.chunk.js","sourcesContent":["\r\n\r\nimport axios from \"axios\";\r\n\r\nconst instance=axios.create({\r\n    baseURL:\"https://api.themoviedb.org/3\",\r\n});\r\nexport default instance;","\r\n\r\nimport React, { useState,useEffect } from 'react';\r\nimport YouTube from 'react-youtube';\r\nimport axios from './axios';\r\nimport \"./Row.css\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\n\r\nfunction Row({title,fetchUrl,isLargeRow}) {\r\n  const [movie,setmovie]=useState([]);\r\n  const [trUrl,settrUrl]=useState(\"\");\r\n  useEffect(() => {\r\n    async function movietre(){\r\n      const fiurl=await axios.get(fetchUrl);\r\n      setmovie(fiurl.data.results);\r\n      return 0;\r\n    }movietre();\r\n  }, [fetchUrl]);\r\n  const opts = {\r\n    height: '390',\r\n    width: '640',\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      autoplay: 1,\r\n    },\r\n  };\r\n  const trailerinitiate=(movier)=>{\r\n    if(trUrl){\r\n      settrUrl(false);\r\n    }\r\n    else{\r\n      movieTrailer(movier?.title || movier?.name || movier?.original_name|| \"\" )\r\n      .then(url=>{\r\n      const urlParams = new URLSearchParams(new URL (url).search);\r\n      settrUrl(urlParams.get('v'));\r\n  }).catch(error=>console.log(error));\r\n\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"row__container\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row__postirs\">\r\n        {movie.map((movier)=>\r\n          <img key={movier.id} onClick={()=>trailerinitiate(movier)} className={`row__poste ${isLargeRow && \"Originals\"}`} src={`${base_url}${isLargeRow?movier.poster_path:movier.backdrop_path}`}/>)}\r\n      </div>\r\n      {trUrl &&<YouTube videoId={trUrl} opts={opts} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Row\r\n","\r\nconst API_KEY=\"5d830b498c43c1d1dcd8da0a0dec9f04\";\r\nconst request={\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchMystery: `/discover/movie?api_key=${API_KEY}&with_genres=9648`,\r\n    fetchSciFi: `/discover/movie?api_key=${API_KEY}&with_genres=878`,\r\n    fetchWestern: `/discover/movie?api_key=${API_KEY}&with_genres=37`,\r\n    fetchAnimation: `/discover/movie?api_key=${API_KEY}&with_genres=16`,\r\n    fetchTV: `/discover/movie?api_key=${API_KEY}&with_genres=10770`,\r\n}\r\nexport default request;","\r\n\r\nimport requests from './request';\r\nimport axios from './axios';\r\nimport React,{ useEffect, useState } from 'react';\r\nimport \"./Banner.css\"\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\nfunction Banner() {\r\n    const [movie,setmovie]=useState([]);\r\n    const fetchUrl=requests.fetchTrending;\r\n  useEffect(() => {\r\n    async function movietre(){\r\n      const fiurl=await axios.get(fetchUrl);\r\n      let num=Math.floor(Math.random()*(fiurl.data.results.length-1));\r\n      setmovie(fiurl.data.results[num]);\r\n      return 0;\r\n    }movietre();\r\n  }, [fetchUrl]);\r\n    return (\r\n        <div className=\"banner_container\" >\r\n            <div className=\"banner_image\" style={{backgroundSize:\"cover\",backgroundImage:`url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,backgroundPosition:\"center center\"}} >\r\n                <div className=\"banner_contents\">\r\n                    <h1 className=\"banner_title\">{movie?.title || movie?.name || movie?.original_name}</h1>\r\n                    <div className=\"banner_buttons\">\r\n                        <button className=\"banner_button\">Play</button>\r\n                        <button className=\"banner_button\">My List</button>\r\n                    </div>\r\n                    <div className=\"banner_description\">\r\n                        {movie?.overview}\r\n                    </div>\r\n\r\n                </div>\r\n            <div className=\"coloriser\"></div>\r\n            </div>\r\n        </div>            \r\n    )\r\n}\r\n\r\nexport default Banner\r\n\r\n","\r\nimport React, { useState,useEffect } from 'react'\r\nimport './Nav.css'\r\nfunction Nav() {\r\n    const [mouse,setmouse]=useState(false);\r\n    function mousepos(e){\r\n        if(window.scrollY>100){\r\n            setmouse(true);\r\n        }\r\n        else{\r\n            setmouse(false);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\",mousepos);\r\n        return () => {\r\n            window.removeEventListener(\"scroll\",mousepos)\r\n        }\r\n    }, [])\r\n    return (\r\n        <div className={`Nav ${mouse && \"nav__black\"}`} >\r\n            <img className=\"nav__logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"></img>\r\n            <img className=\"nav__user\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react';\nimport Row from './Row.js';\nimport './App.css';\nimport request from './request.js';\nimport Banner from './Banner.js'\nimport Nav from './Nav.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav/>\n      <Banner/> \n    <Row title=\"NETFLIX ORIGINALS\" fetchUrl={request.fetchMystery} isLargeRow/>\n    <Row title=\"Trending Now\" fetchUrl={request.fetchTrending} />\n    <Row title=\"Top Rated\" fetchUrl={request.fetchTopRated}/>\n    <Row title=\"Romance Movies\" fetchUrl={request.fetchRomanceMovies}/>\n    <Row title=\"Comedy Movies\" fetchUrl={request.fetchComedyMovies}/>\n    <Row title=\"Horror Movies\" fetchUrl={request.fetchHorrorMovies}/>\n    <Row title=\"Documentaries\" fetchUrl={request.fetchSciFi}/>\n    <Row title=\"Action Movies\" fetchUrl={request.fetchActionMovies}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}